üß† Etapa 1: Planejamento do Projeto
Antes de codar, definimos:
‚Ä¢ 	Objetivo: Criar um cat√°logo de filmes com cadastro, listagem e exibi√ß√£o.
‚Ä¢ 	Tecnologias: HTML (estrutura), CSS (estilo), JavaScript (l√≥gica).
Paradigma: Programa√ß√£o orientada a objetos (POO), com classes Filme e classes cat√°logo.

üß± Etapa 2: A Estrutura do HTML - 
<form id="form-filme">...</form>


Fun√ß√£o:
‚Ä¢ 	Cria a interface para o usu√°rio cadastrar filmes.
‚Ä¢ 	Define onde os filmes ser√£o exibidos (<ul>).
Profissionaliza√ß√£o:
‚Ä¢ 	Usei placeholder, required e type para melhorar a usabilidade.
‚Ä¢ 	Inseri a separa√ß√£o clara entre formul√°rio e listagem.

üé® Etapa 3: Estiliza√ß√£o com CS

form {
  display: flex;
  flex-direction: column;
  ...

  Fun√ß√£o:
‚Ä¢ 	Deixa o app visualmente agrad√°vel e responsivo.
‚Ä¢ 	Usa cores suaves, sombras e espa√ßamento para parecer moderno.
Profissionaliza√ß√£o:
‚Ä¢ 	A escolha do Estilo limpo e consistente.
‚Ä¢ 	Inser√ß√£o de Bot√µes com hover para dar um feedback visual.
‚Ä¢ 	Layout adapt√°vel para diferentes tamanhos de tela.


üß† Etapa 4: Classes em JavaScript
Classe  filme

class Filme {
  constructor(titulo, ano, genero, direcao, sinopse) {
    ...
  }

  exibirDados() {
    return `...`;
  }
}

Fun√ß√£o:
- Representa um filme com seus atributos.
- O M√©todo exibirDados() retorna HTML formatado para exibi√ß√£o.
Profissionaliza√ß√£o:
- Encapsulamento: cada filme √© um objeto com dados e comportamento.
- Facilita manuten√ß√£o e expans√£o (ex: adicionar avalia√ß√£o depois).

